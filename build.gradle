ant.importBuild('3rdParty/universal-tween-engine/java/build.xml') { 
	antTargetName -> 'ant_ute_' + antTargetName
}

task createUniversalTweenEngine(dependsOn: ant_ute_package){}
task installUniversalTweenEngine(){
	doLast {
		exec{
			def cmdline = 'install:install-file -Dfile=../../universal-tween-engine/java/build/api/tween-engine-api.jar -DgroupId=com.aurelienribon -DartifactId=tween-engine-api -Dversion=6.3.3 -Dpackaging=jar'
		
			workingDir = '3rdParty/apache-maven-3.3.9/bin'
			if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
				commandLine 'cmd', '/c', 'mvn.cmd ' + cmdline
			} else {
				commandLine 'mvn ' + cmdline
			} 
		}
	}
}
task buildUniversalTweenEngine(dependsOn: [createUniversalTweenEngine, installUniversalTweenEngine]){}

task buildGradlePlugin(type: GradleBuild){
  buildFile = './GradlePlugin/build.gradle'
}
task buildAPF(type: GradleBuild){
  buildFile = './APF/build.gradle'
}
task buildAPFCreator(type: GradleBuild){
  buildFile = './APFCreator/build.gradle'
}
task buildAppManager(type: GradleBuild){
  buildFile = './AppManager/build.gradle'
}
task buildAppSDK(type: GradleBuild){
  buildFile = './AppSDK/build.gradle'
}
task buildBaseSystem(type: GradleBuild){
  buildFile = './BaseSystem/build.gradle'
}
task buildLogViewer(type: GradleBuild){
  buildFile = './LogViewer/build.gradle'
}
task buildTransport(type: GradleBuild){
  buildFile = './Transport/build.gradle'
}
task buildSDLNative(type: GradleBuild){
  buildFile = './SDLNative/build.gradle'
}
task buildFmodNative(type: GradleBuild){
  buildFile = './FmodNative/build.gradle'
}

defaultTasks 	'buildUniversalTweenEngine', 						//Build UniversalTweenEngine
				'buildAPF', 'buildAPFCreator', 						//Build Projects needed by GradlePlugin
				'buildGradlePlugin', 								//Build Gradle Plugin
				'buildTransport', 'buildAppSDK', 'buildBaseSystem', //Build Base System
				'buildLogViewer', 'buildAppManager', 				//Build utility tools
				'buildSDLNative', 'buildFmodNative' 				//Build native libraries
